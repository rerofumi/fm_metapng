name: Build

on:
  push:
    tags:
      - 'v*'

jobs:
  setup-release:
    name: Setup release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Get url to upload to release from output
        env:
          url: ${{ steps.create_release.outputs.upload_url }}
        run: |
          mkdir artifact
          echo $url > artifact/url.txt
      - name: Upload artifact to share url with other jobs
        uses: actions/upload-artifact@v1
        with:
          name: artifact
          path: artifact/url.txt
    
  build:
    needs: setup-release    
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        run: cargo build --target ${{ matrix.target }} --release

      - name: Zip artifact (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          cp README.md target/${{ matrix.target }}/release
          tar -czvf fm_metapng-${{ matrix.target }}.tar.gz -C target/${{ matrix.target }}/release fm_metapng README.md

      - name: Zip artifact (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          powershell Copy-Item -Path README.md -Destination target/${{ matrix.target }}/release/
          powershell Compress-Archive -Path "target/${{ matrix.target }}/release/fm_metapng.exe,README.md" -DestinationPath fm_metapng-${{ matrix.target }}.zip

      - name: Download artifact to get url to upload to release
        uses: actions/download-artifact@v1
        with:
          name: artifact
    
      - name: Get url to upload to release from artifact (linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        id: get_url
        run: |
          url=$(cat artifact/url.txt)
          echo "##[set-output name=upload_url;]$url"

      - name: Get url to upload to release from artifact (windows)
        if: ${{ matrix.os == 'windows-latest' }}
        id: get_url_windows
        shell: powershell
        run: |
          $url = Get-Content artifact/url.txt
          Write-Output "##[set-output name=upload_url;]$url"
    
      - name: Upload Release Asset (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_url.outputs.upload_url }}
          asset_path: fm_metapng-${{ matrix.target }}.tar.gz
          asset_name: fm_metapng-${{ matrix.target }}.tar.gz
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_url_windows.outputs.upload_url }}
          asset_path: fm_metapng-${{ matrix.target }}.zip
          asset_name: fm_metapng-${{ matrix.target }}.zip
          asset_content_type: application/octet-stream
